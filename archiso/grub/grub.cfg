if [ "${grub_platform}" == 'efi' ]; then
    bios_or_uefi='(UEFI)!'
else
    bios_or_uefi='(BIOS)!'
fi

# Load partition table and file system modules
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660
insmod ntfs
insmod ntfscomp
insmod exfat
insmod udf

# Use graphics-mode output
insmod font
if loadfont "${prefix}/fonts/unicode.pf2" ; then
    insmod all_video
    set gfxmode="auto"
    terminal_input console
    terminal_output gfxterm
fi

# Enable serial console
insmod serial
insmod usbserial_common
insmod usbserial_ftdi
insmod usbserial_pl2303
insmod usbserial_usbdebug
if serial --unit=0 --speed=115200; then
    terminal_input --append serial
    terminal_output --append serial
fi

# Set default menu entry
default=crystallinux
timeout=10
timeout_style=menu

# Welcome Text
menuentry "Welcome to CrystalLinux Live ISO $bios_or_uefi" {
insmod ext2
}
menuentry "----------------------------------------------------" {
insmod ext2
}


# Menu entries

menuentry "CrystalLinux" --class arch --class gnu-linux --class gnu --class os --id 'crystallinux' {
    set gfxpayload=keep,1920x1080
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-zen archisobasedir=%INSTALL_DIR% archisosearchuuid=%ARCHISO_UUID% quiet loglevel=3 udev.log_level=3 cow_spacesize=10G copytoram=auto nvme_load=yes
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-zen.img
}

if [ "${grub_platform}" == 'efi' -a "${grub_cpu}" == 'x86_64' -a -f '/boot/memtest86+/memtest.efi' ]; then
    menuentry 'Run Memtest86+ (RAM test)' --class memtest86 --class memtest --class gnu --class tool {
        set gfxpayload=800x600,1024x768,1920x1080
        linux /boot/memtest86+/memtest.efi
    }
fi

if [ "${grub_platform}" == 'efi' ]; then
    if [ "${grub_cpu}" == 'x86_64' -a -f '/shellx64.efi' ]; then
        menuentry 'UEFI Shell' --class efi {
            chainloader /shellx64.efi
        }
    elif [ "${grub_cpu}" == "i386" -a -f '/shellia32.efi' ]; then
        menuentry 'UEFI Shell' --class efi {
            chainloader /shellia32.efi
        }
    fi

    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' {
        fwsetup
    }
fi

menuentry 'System shutdown' --class shutdown --class poweroff {
    echo 'System shutting down...'
    halt
}

menuentry 'System restart' --class reboot --class restart {
    echo 'System rebooting...'
    reboot
}
